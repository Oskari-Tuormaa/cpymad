#! /usr/bin/env bash

set -ex

: ${MADX_VERSION:=5.04.02}
: ${CPYMAD_VERSION:=1.0.8}
: ${PY:=/opt/python/cp36-cp36m/bin}

# Extract user-specified .tar.gz release tarballs:
if [[ -f $CPYMAD_ARCHIVE ]]; then
    tar -xzf $CPYMAD_ARCHIVE --one-top-level=/io/cpymad --strip-components 1
fi

if [[ -f $MADX_ARCHIVE ]]; then
    tar -xzf $MADX_ARCHIVE --one-top-level=/io/madx --strip-components 1
fi

# Download MAD-X:
if [[ ! -e /io/MAD-X ]]; then
    git clone git://github.com/MethodicalAcceleratorDesign/MAD-X /io/MAD-X
    git -C /io/MAD-X checkout $MADX_VERSION
fi

# Download cpymad:
if [[ ! -e /io/cpymad ]]; then
    git clone git://github.com/hibtc/cpymad /io/cpymad
    git -C /io/cpymad checkout $CPYMAD_VERSION
fi

# Build MAD-X
mkdir -p /io/build/madx
cd /io/build/madx
cmake28 /io/MAD-X \
    -DBUILD_SHARED_LIBS=OFF \
    -DMADX_STATIC=ON \
    -DCMAKE_INSTALL_PREFIX=/io/install \
    -DCMAKE_C_FLAGS="-fvisibility=hidden" \
    -DMADX_INSTALL_DOC=OFF \
    -DMADX_ONLINE=OFF \
    -DMADX_FORCE_32=OFF \
    -DMADX_X11=OFF
make install

# The cpymad folder may be mounted from the host OS. In this case we should
# not create root owned files there or modify any of the user's data. For this
# reason, we first copy the source files to a build folder and perform all
# further steps from there:
cd /io/cpymad
rm -rf /io/build/cpymad
mkdir -p /io/build/cpymad
$PY/python setup.py egg_info
tar -c $(cat src/cpymad.egg-info/SOURCES.txt) |
    tar -x -C /io/build/cpymad --no-same-owner

# cythonize once instead of re-cythonizing for each dependency:
cd /io/build/cpymad
$PY/pip install cython
$PY/cython src/cpymad/libmadx.pyx
$PY/pip uninstall cython -y

# Create wheels:
cd /io/build/cpymad
for PYBIN in /opt/python/*/bin; do
    "${PYBIN}/python" setup.py build_ext --force \
        --madxdir=/io/install --no-X11
    "${PYBIN}/python" setup.py bdist_wheel
done

# Bundle external shared libraries into the wheels
mkdir -p /io/wheels
for whl in dist/*.whl; do
    auditwheel repair "$whl" -w /io/wheels/
done
